"use strict";
// Copyright (c) 2019-2021 Jan Janak <jan@janakj.org>
//
// Permission to use, copy, modify, and/or distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sampleFormatStr = exports.frameSize = exports.sampleSize = exports.RecordStream = exports.UploadStream = exports.PlaybackStream = exports.PA_SAMPLE_FORMAT = exports.PA_SOURCE_FLAGS = exports.PA_SINK_FLAGS = exports.PA_NATIVE_COOKIE_LENGTH = exports.PA_MAX_CHANNELS = exports.PA_NO_VALUE = exports.PA_NO_INDEX = exports.PA_DEFAULT_SINK = exports.PA_DEFAULT_SOURCE = void 0;
__exportStar(require("./client"), exports);
__exportStar(require("./volume"), exports);
var defs_1 = require("./defs");
Object.defineProperty(exports, "PA_DEFAULT_SOURCE", { enumerable: true, get: function () { return defs_1.PA_DEFAULT_SOURCE; } });
Object.defineProperty(exports, "PA_DEFAULT_SINK", { enumerable: true, get: function () { return defs_1.PA_DEFAULT_SINK; } });
Object.defineProperty(exports, "PA_NO_INDEX", { enumerable: true, get: function () { return defs_1.PA_NO_INDEX; } });
Object.defineProperty(exports, "PA_NO_VALUE", { enumerable: true, get: function () { return defs_1.PA_NO_VALUE; } });
Object.defineProperty(exports, "PA_MAX_CHANNELS", { enumerable: true, get: function () { return defs_1.PA_MAX_CHANNELS; } });
Object.defineProperty(exports, "PA_NATIVE_COOKIE_LENGTH", { enumerable: true, get: function () { return defs_1.PA_NATIVE_COOKIE_LENGTH; } });
Object.defineProperty(exports, "PA_SINK_FLAGS", { enumerable: true, get: function () { return defs_1.PA_SINK_FLAGS; } });
Object.defineProperty(exports, "PA_SOURCE_FLAGS", { enumerable: true, get: function () { return defs_1.PA_SOURCE_FLAGS; } });
Object.defineProperty(exports, "PA_SAMPLE_FORMAT", { enumerable: true, get: function () { return defs_1.PA_SAMPLE_FORMAT; } });
__exportStar(require("./error"), exports);
var stream_1 = require("./stream");
Object.defineProperty(exports, "PlaybackStream", { enumerable: true, get: function () { return stream_1.PlaybackStream; } });
Object.defineProperty(exports, "UploadStream", { enumerable: true, get: function () { return stream_1.UploadStream; } });
Object.defineProperty(exports, "RecordStream", { enumerable: true, get: function () { return stream_1.RecordStream; } });
Object.defineProperty(exports, "sampleSize", { enumerable: true, get: function () { return stream_1.sampleSize; } });
Object.defineProperty(exports, "frameSize", { enumerable: true, get: function () { return stream_1.frameSize; } });
Object.defineProperty(exports, "sampleFormatStr", { enumerable: true, get: function () { return stream_1.sampleFormatStr; } });
